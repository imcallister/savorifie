Financifie - the accounts package for Electronifie



Intellectual Property
=====================
portions copyright ReportLab Europe Ltd and/or Andy Robinson
This will use ReportLab's 'DocEngine' framework code, and portions of Andy Robinson's 'doubletalk' accounting code.  Everything not listed below is copyright Electronifie
  (to be completed)


Getting Started
===============
Assuming you work in ~/code, you will need
* an Apache password to access ReportLab's mercurial repo
* A rpeortlab.com website password for pip installs of reportlab/rlextra
One day, we will synchronise these, but we haven't managed it yet.
Contact support@reportlab.com for resets and assistance.


$ cd ~/code    (or wherever)
$ hg clone https://hg.reportlab.com/hg-electronifie/financifie
$ virtualenv financifie      #ensure Python 2.7.x
$ cd financifie
$ source bin/activate
$ pip install -r requirements.txt

Wait for a LOONNGG pip install, which might need nursing.  At some point it tries
to get 'rlextra' and asks for your web password.   user=beta, password=gammadelta
currently works as a backup.   


You can then either make a local database, or copy down the live one.
At a mysql prompt, enter
mysql>  create database financifie;

then either download live data, save as an SQL file and pipe in here i.e.
   mysql -user=USERNAME financifie < my_latest.sql





Test suite
===========
Test case classes define the ffixtures they need.  All relevant fixtures live
in project/base/fixtures/*.json.

"initial_data.json" will always be loaded by syncdb and defines web users, 
employees, departments and the two companies.  

"test_transactions.json" defines a small chart of accounts, GL transactions
and business mdodel objects to go with it.  DO NOT LOAD IT AFTER after 
chart_of_accounts.json as they may clash on some paths and comments. This
is useful when you want to see the environment the test suite might find.


$ python manage.py syncdb --noinput
$ python manage.py loaddata chart_of_accounts
$ python manage.py loaddata counterparties

$ python manage.py loaddata test_transactions.


Once done, it creates a 'financifie' database with users 'rptlab', 'imcallister',
'skutko', 'msetrin' and 'kdeol' (same passwords as Apache).  You should be able to run

$ python manage.py runserver

and

$ ./runtests
or (what it contains)
$ python manage.py test gl base nominal timetracking




