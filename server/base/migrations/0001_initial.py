# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2017-03-25 23:04
from __future__ import unicode_literals

import accountifie.gl.bmo
import accountifie.toolkit.utils.gl_helpers
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('gl', '0002_transaction_bmo_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cashflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('description', models.TextField(max_length=200, null=True)),
                ('external_id', models.CharField(max_length=20, null=True)),
                ('tag', models.CharField(blank=True, max_length=30, null=True)),
                ('company', models.ForeignKey(default=b'SAV', on_delete=django.db.models.deletion.CASCADE, to='gl.Company')),
                ('counterparty', models.ForeignKey(blank=True, help_text=b'We need to match this up', null=True, on_delete=django.db.models.deletion.CASCADE, to='gl.Counterparty')),
                ('expense_acct', models.ForeignKey(blank=True, help_text=b'Optional. For related expense created from Credit Card Trans', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expense_acct', to='gl.Account')),
                ('ext_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gl.ExternalAccount')),
                ('trans_type', models.ForeignKey(blank=True, help_text=b'We need to match this up', null=True, on_delete=django.db.models.deletion.CASCADE, to='gl.Account')),
            ],
            options={
                'db_table': 'base_cashflow',
            },
            bases=(models.Model, accountifie.gl.bmo.BusinessModelObject),
        ),
        migrations.CreateModel(
            name='CashflowAllocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('tag', models.CharField(blank=True, max_length=30, null=True)),
                ('cashflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Cashflow')),
                ('counterparty', models.ForeignKey(blank=True, help_text=b'We need to match this up', null=True, on_delete=django.db.models.deletion.CASCADE, to='gl.Counterparty')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gl.Project')),
                ('trans_type', models.ForeignKey(blank=True, help_text=b'We need to match this up', null=True, on_delete=django.db.models.deletion.CASCADE, to='gl.Account')),
            ],
            options={
                'db_table': 'base_cashflowallocation',
            },
        ),
        migrations.CreateModel(
            name='CreditCardTrans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trans_date', models.DateField()),
                ('post_date', models.DateField()),
                ('trans_type', models.CharField(max_length=20, null=True)),
                ('trans_id', models.CharField(max_length=50, null=True, unique=True)),
                ('amount', models.FloatField(null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('payee', models.CharField(blank=True, max_length=200, null=True)),
                ('card_number', models.CharField(blank=True, max_length=20, null=True)),
                ('expense_comment', models.CharField(blank=True, max_length=200, null=True)),
                ('acct_payable', models.ForeignKey(default=b'3000', on_delete=django.db.models.deletion.CASCADE, related_name='ccard_ap_acct', to='gl.Account')),
                ('card_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='card_company', to='gl.Counterparty')),
                ('company', models.ForeignKey(default=accountifie.toolkit.utils.gl_helpers.get_default_company, on_delete=django.db.models.deletion.CASCADE, to='gl.Company')),
                ('counterparty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='counterparty', to='gl.Counterparty')),
                ('expense_acct', models.ForeignKey(blank=True, help_text=b'Optional. For related expense created from Credit Card Trans', null=True, on_delete=django.db.models.deletion.CASCADE, to='gl.Account')),
            ],
            options={
                'db_table': 'base_creditcardtransactions',
                'verbose_name': 'Credit Card Transaction',
                'verbose_name_plural': 'Credit Card Transactions',
            },
            bases=(models.Model, accountifie.gl.bmo.BusinessModelObject),
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_date', models.DateField(null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11, null=True)),
                ('currency', models.CharField(default=b'USD', max_length=10)),
                ('process_date', models.DateField(null=True)),
                ('stub', models.BooleanField(default=False, help_text=b'incomplete, created from cashflow or credit card')),
                ('comment', models.CharField(blank=True, help_text=b'Details of any modifications/notes added in Django', max_length=200, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gl.Account')),
                ('company', models.ForeignKey(default=accountifie.toolkit.utils.gl_helpers.get_default_company, on_delete=django.db.models.deletion.CASCADE, to='gl.Company')),
                ('counterparty', models.ForeignKey(blank=True, help_text=b'We need to match this up', null=True, on_delete=django.db.models.deletion.CASCADE, to='gl.Counterparty')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gl.Employee')),
                ('from_ccard', models.ForeignKey(blank=True, help_text=b'created from credit card trans', null=True, on_delete=django.db.models.deletion.CASCADE, to='base.CreditCardTrans')),
                ('from_cf', models.ForeignKey(blank=True, help_text=b'created from cashflow', null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Cashflow')),
                ('paid_from', models.ForeignKey(blank=True, help_text=b'shows the account this was paid from, or is owed to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paid_from', to='gl.Account')),
            ],
            options={
                'db_table': 'base_expense',
            },
            bases=(models.Model, accountifie.gl.bmo.BusinessModelObject),
        ),
        migrations.CreateModel(
            name='ExpenseAllocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Expense')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gl.Project')),
            ],
            options={
                'db_table': 'base_expenseallocation',
            },
        ),
        migrations.CreateModel(
            name='NominalTranLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gl.Account')),
                ('counterparty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gl.Counterparty')),
            ],
            options={
                'db_table': 'base_nominaltranline',
            },
        ),
        migrations.CreateModel(
            name='NominalTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('date_end', models.DateField(blank=True, db_index=True, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('comment', models.CharField(default=b'None', max_length=200)),
                ('company', models.ForeignKey(default=accountifie.toolkit.utils.gl_helpers.get_default_company, on_delete=django.db.models.deletion.CASCADE, to='gl.Company')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'db_table': 'base_nominaltransaction',
            },
            bases=(models.Model, accountifie.gl.bmo.BusinessModelObject),
        ),
        migrations.CreateModel(
            name='StockEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('quantity', models.IntegerField()),
                ('share_class', models.CharField(choices=[[b'common', b'Common Stock'], [b'series_A1', b'Series A-1 Preferreds']], max_length=20)),
                ('gl_acct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gl.Account')),
            ],
            options={
                'db_table': 'base_stockentry',
            },
        ),
        migrations.AddField(
            model_name='nominaltranline',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.NominalTransaction'),
        ),
    ]
